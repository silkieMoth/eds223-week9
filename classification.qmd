---
title: "EDS 223: week 9"
format: html
editor: visual
---

```{r}
if(!require(rpart)){
    install.packages("rpart")
}
if(!require(rpart.plot)){
    install.packages("rpart.plot")
}
```

```{r}
library(tidyverse)
library(rpart)
library(rpart.plot)
library(tmap)
library(terra)
library(sf)
```

```{r}
filelist <- list.files(here::here('data', 'landsat-data'), full.names = TRUE)

landsat <- rast(filelist)

names(landsat) <- c('blue', 'green', 'red', 'NIR', 'SWIR1', 'SWIR2')

plotRGB(landsat, r = 3, g = 2, b = 1, stretch = 'lin')
```
## load study area
```{r}
SB_county_south <- st_read(here::here('data', 'SB_county_south.shp')) %>%
  st_transform(., crs = crs(landsat))

tm_shape(SB_county_south) +
  tm_borders()
```

```{r}
# crop landsat scene to the extend of the study area
landsat_cropped <- terra::crop(landsat, SB_county_south)

# mask the raster to the study area
landsat_masked <- terra::mask(landsat_cropped, SB_county_south)

rm(landsat, SB_county_south, landsat_cropped)

# values are not in reflectance yet (0, 100), are actually much bigger
# this is cause the numbers are easier to store this way
# see metadata for scaling factors
plotRGB(landsat_masked, r = 3, g = 2, b = 1, stretch = 'lin')
```

## convert landsat values into reflectance

```{r}
# reclassify erroneous values as NA
rcl <- matrix(c(-Inf, 7273, NA,
                43636, Inf, NA), 
              ncol = 3,
              byrow = TRUE)

landsat <- terra::classify(landsat_masked, rcl = rcl)

# adjust values based on scaling and additive factor
landsat <- (landsat * 0.0000275 - 0.2) * 100
summary(landsat)
```

## training classifier

```{r}
# read in training data
training_data <- st_read(here::here('data', 'trainingdata.shp')) %>%
  st_transform(., crs = crs(landsat))
```

```{r}
# extract reflectance values at training sites
training_data_values <- terra::extract(landsat, training_data, df = TRUE)

# convert training data to data frame
training_data_attributes <- training_data %>%
  st_drop_geometry()

# join training data attributes and extracted reflectance values
SB_training_data <- left_join(training_data_values, training_data_attributes,
                              by = c("ID" = "id")) %>%
                    mutate(type = as.factor(type)) # convert landcover type to factor
```

```{r}
# establish model formula
SB_formula <- type ~ red + green + blue + NIR + SWIR1 + SWIR2

# train decision tree
SB_decision_tree <- rpart(formula = SB_formula,
                          data = SB_training_data,
                          method = 'class',
                          na.action = na.omit)

prp(SB_decision_tree)


```

## classify image

```{r}
# classify image based on decision tree
SB_classification <- terra::predict(landsat, SB_decision_tree, 
                                    type = 'class', na.rm = TRUE)

levels(SB_training_data$type)
levels(SB_classification)
```

```{r}
tm_shape(SB_classification) +
  tm_raster(palette = c("#8DB580", "#F2DDA4", "#7E8987", "#6A8EAE"),
            labels = c('green vegetation',
                       'soil/dead grass',
                       'urban', 
                       'water'),
            title = 'Land cover type') + 
  tm_layout(legend.position = c('left', 'bottom'),
            main.title = 'Santa Barbara Land')
```

